name: Release
on:
 push:
  branches: [master]
env:
 AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 AWS_REGION: ${{ secrets.AWS_REGION }}
 ECR_REPOSITORY: greens-ci-cd-eks



jobs:
 release:
  name: Release
  runs-on: ubuntu-latest
  steps:
   - name: Cancel Previous Runs
     uses: styfle/cancel-workflow-action@0.4.1
     with:
      access_token: ${{ github.token }}
     
   - name: Checkout
     uses: actions/checkout@v2
     with:
      ref: ${{ github.event.pull_request.head.sha }}  
     
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v1
     with:
      aws-access-key-id: ${{ env.AWS_ACCESS_ID }}
      aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ env.AWS_REGION }}
   - name: Login to Amazon ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v1
     
   - name: Set up Docker Buildx
     id: buildx
     uses: docker/setup-buildx-action@master
  
   - name: Build & Push Image
     env:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
     run: |
       docker buildx create --use
       docker buildx build \
       --tag ${{ env.RELEASE_IMAGE }} \
       --push \
       .
       rm -rf /tmp/.buildx-cache 
       VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
       curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
        --progress-bar \
        --location \
        --remote-name
       chmod +x kubectl
       mv kubectl /usr/local/bin/
       aws eks update-kubeconfig --name greens-cluster-cluster --region ap-south-1
       kubectl get pods
      
       sed -i "s|default/greens-demo|${{ env.RELEASE_IMAGE }}|g" k8s.yaml
       cat k8s.yaml
       kubectl apply -f k8s-service.yaml
       kubectl apply -f k8s.yaml 
